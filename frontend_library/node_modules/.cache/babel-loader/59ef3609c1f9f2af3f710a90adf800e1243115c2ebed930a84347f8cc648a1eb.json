{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'NavBar',\n  data() {\n    return {\n      isLoggedIn: false,\n      userType: '',\n      currentDate: ''\n    };\n  },\n  computed: {\n    brandLink() {\n      if (this.isLoggedIn && this.userType === 'librarian') {\n        return '/librarian/dashboard';\n      } else if (this.isLoggedIn && this.userType === 'user') {\n        return '/user/dashboard';\n      } else {\n        return '/';\n      }\n    },\n    navLinks() {\n      const links = [];\n      if (this.isLoggedIn) {\n        if (this.userType === 'librarian') {\n          links.push({\n            name: 'Dashboard',\n            to: '/librarian/dashboard',\n            label: 'Dashboard'\n          }, {\n            name: 'SectionManagement',\n            to: '/librarian/dashboard/sections',\n            label: 'Sections'\n          }, {\n            name: 'RequestedBooks',\n            to: '/librarian/dashboard/requestedbooks',\n            label: 'Requests'\n          }, {\n            name: 'AssignedBooks',\n            to: '/librarian/dashboard/assignedbooks',\n            label: 'Allocated'\n          }, {\n            name: 'StatusBooks',\n            to: '/librarian/dashboard/bookstatus',\n            label: 'Available'\n          });\n        } else {\n          links.push({\n            name: 'Dashboard',\n            to: '/user/dashboard',\n            label: 'Home'\n          }, {\n            name: 'IssuedBooks',\n            to: '/user/dashboard/issuedbooks',\n            label: 'Issued Books'\n          }, {\n            name: 'AllBooks',\n            to: '/user/dashboard/history',\n            label: 'Your History'\n          });\n        }\n      } else {\n        links.push({\n          name: 'UserAuthentication',\n          to: '/',\n          label: 'User Login'\n        }, {\n          name: 'LibrarianAuthentication',\n          to: '/librarian/login',\n          label: 'Librarian Login'\n        });\n      }\n      return links;\n    }\n  },\n  methods: {\n    logout() {\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('userType');\n      this.isLoggedIn = false;\n      this.userType = '';\n      this.$router.push('/');\n    },\n    updateDateTime() {\n      const now = new Date();\n      const options = {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n        hour12: true\n      };\n      this.currentDate = now.toLocaleDateString('en-IN', options);\n    }\n  },\n  created() {\n    this.isLoggedIn = localStorage.getItem('accessToken') !== null;\n    this.userType = localStorage.getItem('userType');\n    this.updateDateTime(); // Update date-time initially\n    setInterval(() => {\n      this.updateDateTime(); // Update date-time every second\n    }, 1000);\n  }\n};","map":{"version":3,"names":["name","data","isLoggedIn","userType","currentDate","computed","brandLink","navLinks","links","push","to","label","methods","logout","localStorage","removeItem","$router","updateDateTime","now","Date","options","weekday","year","month","day","hour","minute","second","hour12","toLocaleDateString","created","getItem","setInterval"],"sources":["C:\\Users\\vijay\\OneDrive\\Desktop\\National-Library-LMS\\Library_Code\\frontend_library\\src\\components\\NavBar.vue"],"sourcesContent":["<template>\n  <nav class=\"navbar navbar-expand-lg\">\n    <div class=\"container-fluid\">\n      <!-- Brand link -->\n      <router-link :to=\"brandLink\" class=\"navbar-brand\">\n        <img :src=\"require('@/assets/library_logo.png')\" alt=\"National Library Logo\" style=\"width: 300px; height: 50px;\">\n      </router-link>\n\n      <!-- Toggle button -->\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <!-- Navigation links -->\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n          <li v-for=\"link in navLinks\" :key=\"link.name\" class=\"nav-item\">\n            <router-link :to=\"link.to\" class=\"nav-link\" :active-class=\"'active'\">{{ link.label }}</router-link>\n          </li>\n        </ul>\n      </div>\n\n      <!-- Logout button and date-time display -->\n      <div class=\"navbar-right\">\n        <button v-if=\"isLoggedIn\" class=\"btn btn-outline-danger\" @click=\"logout\" style=\"width:fit-content;padding:1.5%;margin-left: 0%;\">Logout</button>\n        <div class=\"date-time\">\n          <div class=\"date-time-box\">\n            {{ currentDate }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'NavBar',\n  data() {\n    return {\n      isLoggedIn: false,\n      userType: '',\n      currentDate: ''\n    };\n  },\n  computed: {\n    brandLink() {\n      if (this.isLoggedIn && this.userType === 'librarian') {\n        return '/librarian/dashboard';\n      } else if (this.isLoggedIn && this.userType === 'user') {\n        return '/user/dashboard';\n      } else {\n        return '/';\n      }\n    },\n    navLinks() {\n      const links = [];\n      if (this.isLoggedIn) {\n        if (this.userType === 'librarian') {\n          links.push(\n            { name: 'Dashboard', to: '/librarian/dashboard', label: 'Dashboard' },\n            { name: 'SectionManagement', to: '/librarian/dashboard/sections', label: 'Sections' },\n            { name: 'RequestedBooks', to: '/librarian/dashboard/requestedbooks', label: 'Requests' },\n            { name: 'AssignedBooks', to: '/librarian/dashboard/assignedbooks', label: 'Allocated' },\n            { name: 'StatusBooks', to: '/librarian/dashboard/bookstatus', label: 'Available' },\n            \n          );\n        } else {\n          links.push(\n            { name: 'Dashboard', to: '/user/dashboard', label: 'Home' },\n            { name: 'IssuedBooks', to: '/user/dashboard/issuedbooks', label: 'Issued Books' },\n            { name: 'AllBooks', to: '/user/dashboard/history', label: 'Your History' },\n          );\n        } \n      } else {\n        links.push(\n          { name: 'UserAuthentication', to: '/', label: 'User Login' },\n          { name: 'LibrarianAuthentication', to: '/librarian/login', label: 'Librarian Login' },\n        );\n      }\n      return links;\n    }\n  },\n  methods: {\n    logout() {\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('userType');\n      this.isLoggedIn = false;\n      this.userType = '';\n      this.$router.push('/');\n    },\n    updateDateTime() {\n      const now = new Date();\n      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true };\n      this.currentDate = now.toLocaleDateString('en-IN', options);\n    }\n  },\n  created() {\n    this.isLoggedIn = localStorage.getItem('accessToken') !== null;\n    this.userType = localStorage.getItem('userType');\n    this.updateDateTime(); // Update date-time initially\n    setInterval(() => {\n      this.updateDateTime(); // Update date-time every second\n    }, 1000);\n  }\n};\n</script>\n\n<style scoped>\n/* Add your CSS styles here */\n.navbar {\n  background-color: #333; /* Dark grey background */\n}\n\n.navbar-brand,\n.nav-link {\n  color: #fff; \n  font-family: 'Open Sans', sans-serif;\n  font-size:medium;/* White text color */\n}\n\n.nav-link:hover {\n  color: #1ee2e7; /* Text color on hover */\n}\n\n.active { /* Apply styling to the active link directly */\n  background-color: #1ee2e7; /* Background color for active link */\n}\n\n.active:hover {\n  background-color: #17d0d5; /* Hover color for active link */\n}\n\n.navbar-right {\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n}\n\n.date-time {\n  margin-left: 20px;\n}\n\n.date-time-box {\n  border: 2px solid #fff;\n  padding: 5px 10px;\n  color: #fff;\n  font-family: 'Open Sans', sans-serif;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}