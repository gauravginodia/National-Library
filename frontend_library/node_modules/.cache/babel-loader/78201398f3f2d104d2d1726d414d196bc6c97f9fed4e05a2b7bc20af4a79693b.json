{"ast":null,"code":"import axios from 'axios';\nimport ChartBar from '@/components/ChartBar.vue';\nimport { getRandomColorArray } from '@/utils/colors'; // Import color utility\nimport NavBar from '@/components/NavBar.vue';\nexport default {\n  name: 'StatsDashboard',\n  components: {\n    ChartBar,\n    NavBar\n  },\n  data() {\n    return {\n      distributionData: {},\n      issuancesData: {},\n      issuedData: {},\n      ratingsData: {},\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    };\n  },\n  async mounted() {\n    try {\n      await this.fetchDistributionData();\n      await this.fetchIssuancesData();\n      await this.fetchIssuedData();\n      await this.fetchRatingsData();\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n    }\n  },\n  methods: {\n    async fetchDistributionData() {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/section/books/distribution', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        this.distributionData = {\n          labels: response.data.labels,\n          datasets: [{\n            label: 'Books',\n            backgroundColor: getRandomColorArray(response.data.labels.length),\n            data: response.data.data\n          }]\n        };\n      } catch (error) {\n        console.error('Error fetching book distribution data:', error.message);\n      }\n    },\n    async fetchIssuancesData() {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/book/issuances/trend', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        this.issuancesData = {\n          labels: response.data.labels,\n          datasets: [{\n            label: 'Issuances',\n            backgroundColor: getRandomColorArray(response.data.labels.length),\n            data: response.data.data\n          }]\n        };\n      } catch (error) {\n        console.error('Error fetching book issuances trend data:', error.message);\n      }\n    },\n    async fetchIssuedData() {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/section/books/issued', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        this.issuedData = {\n          labels: response.data.labels,\n          datasets: [{\n            label: 'Books Issued',\n            backgroundColor: getRandomColorArray(response.data.labels.length),\n            data: response.data.data\n          }]\n        };\n      } catch (error) {\n        console.error('Error fetching books issued per section data:', error.message);\n      }\n    },\n    async fetchRatingsData() {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/books/ratings', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        this.ratingsData = {\n          labels: response.data.labels,\n          datasets: [{\n            label: 'Ratings',\n            backgroundColor: 'dodgerblue',\n            data: response.data.data\n          }]\n        };\n        console.log(this.ratingsData);\n      } catch (error) {\n        console.error('Error fetching books by ratings data:', error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","ChartBar","getRandomColorArray","NavBar","name","components","data","distributionData","issuancesData","issuedData","ratingsData","options","responsive","scales","y","beginAtZero","mounted","fetchDistributionData","fetchIssuancesData","fetchIssuedData","fetchRatingsData","error","console","message","methods","response","get","headers","Authorization","localStorage","getItem","labels","datasets","label","backgroundColor","length","log"],"sources":["C:\\Users\\vijay\\OneDrive\\Desktop\\National-Library-LMS\\Library_Code\\frontend_library\\src\\views\\Librarian\\StatsDashboard.vue"],"sourcesContent":["<template>\r\n  <NavBar/>\r\n  <div class=\"librarian-dashboard\">\r\n    <h1 class=\"dashboard-title\">Librarian Dashboard</h1>\r\n    <div class=\"chart-container\" >\r\n      <!-- Row 1 -->\r\n      <div class=\"\" v-if=\"distributionData.labels && distributionData.labels.length\">\r\n        <div class=\"chart-card\" style=\"margin-bottom:5%;\">\r\n          <h2>Book Distribution by Section</h2>\r\n          <ChartBar :chart-data=\"distributionData\" chart-type=\"pie\" :options=\"options\"/>\r\n        </div>\r\n      </div>\r\n      <div class=\"\" v-if=\"issuancesData.labels && issuancesData.labels.length\">\r\n        <div class=\"chart-card\">\r\n          <h2>Book Issuances Trend Over Time</h2>\r\n          <ChartBar :chart-data=\"issuancesData\" chart-type=\"line\" :options=\"options\"/>\r\n        </div>\r\n      </div>\r\n      <div class=\"\" v-if=\"issuedData.labels && issuedData.labels.length\">\r\n        <div class=\"chart-card\">\r\n          <h2 >Books Issued per Section</h2>\r\n          <ChartBar :chart-data=\"issuedData\" chart-type=\"doughnut\" :options=\"options\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n      <!-- Row 2 -->\r\n      <div class=\"chart-item\" v-if=\"ratingsData.labels && ratingsData.labels.length\">\r\n        <div class=\"chart-card\">\r\n          <h2>Books by Ratings</h2>\r\n          <ChartBar :chart-data=\"ratingsData\" chart-type=\"bar\" :options=\"{\r\n            scales: {\r\n              x: {\r\n                beginAtZero: false,\r\n                suggestedMin: 0,\r\n                suggestedMax: 10,\r\n                ticks: {\r\n                  stepSize: 1,\r\n                },\r\n              },\r\n              y: {\r\n                beginAtZero: true,\r\n                suggestedMin: 0,\r\n                suggestedMax: 5,\r\n                ticks: {\r\n                  stepSize: 1,\r\n                },\r\n              },\r\n            }\r\n          }\" />\r\n        </div>\r\n      </div>\r\n   \r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.librarian-dashboard {\r\n  padding: 20px;\r\n}\r\n\r\n.dashboard-title {\r\n  margin-top: 20px;\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n  color: #333;\r\n}\r\n\r\n.chart-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n}\r\n\r\n.chart-item {\r\n  width: 100%; /* Adjust the width as needed */\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-card {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\ncanvas {\r\n  width: 100%;\r\n  height: 300px; /* Set the height as per your requirement */\r\n}\r\n</style>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport ChartBar from '@/components/ChartBar.vue';\r\nimport { getRandomColorArray } from '@/utils/colors'; // Import color utility\r\nimport NavBar from '@/components/NavBar.vue';\r\n\r\nexport default {\r\n  name: 'StatsDashboard',\r\n  components: {\r\n    ChartBar,\r\n    NavBar\r\n  },\r\n  data() {\r\n    return {\r\n      distributionData: {},\r\n      issuancesData: {},\r\n      issuedData: {},\r\n      ratingsData: {},\r\n      options: {\r\n        responsive: true,\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true\r\n          }\r\n        }\r\n      },\r\n    };\r\n  },\r\n  async mounted() {\r\n  try {\r\n    await this.fetchDistributionData();\r\n    await this.fetchIssuancesData();\r\n    await this.fetchIssuedData();\r\n    await this.fetchRatingsData();\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error.message);\r\n  }\r\n},\r\n\r\n  methods: {\r\n\r\n    async fetchDistributionData() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/api/section/books/distribution', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n          },\r\n        });\r\n        this.distributionData = {\r\n          labels: response.data.labels,\r\n          datasets: [{\r\n            label: 'Books',\r\n            backgroundColor: getRandomColorArray(response.data.labels.length),\r\n            data: response.data.data,\r\n          }],\r\n        };\r\n      } catch (error) {\r\n        console.error('Error fetching book distribution data:', error.message);\r\n      }\r\n    },\r\n    async fetchIssuancesData() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/api/book/issuances/trend', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n          },\r\n        });\r\n        this.issuancesData = {\r\n          labels: response.data.labels,\r\n          datasets: [{\r\n            label: 'Issuances',\r\n            backgroundColor: getRandomColorArray(response.data.labels.length),\r\n            data: response.data.data,\r\n          }],\r\n        };\r\n      } catch (error) {\r\n        console.error('Error fetching book issuances trend data:', error.message);\r\n      }\r\n    },\r\n    async fetchIssuedData() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/api/section/books/issued', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n          },\r\n        });\r\n        this.issuedData = {\r\n          labels: response.data.labels,\r\n          datasets: [{\r\n            label: 'Books Issued',\r\n            backgroundColor: getRandomColorArray(response.data.labels.length),\r\n            data: response.data.data,\r\n          }],\r\n        };\r\n      } catch (error) {\r\n        console.error('Error fetching books issued per section data:', error.message);\r\n      }\r\n    },\r\n    async fetchRatingsData() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/api/books/ratings', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n          },\r\n        });\r\n        this.ratingsData = {\r\n          labels: response.data.labels,\r\n          datasets: [{\r\n            label: 'Ratings',\r\n            backgroundColor:'dodgerblue',\r\n            data: response.data.data,\r\n          }],\r\n        };\r\n        console.log(this.ratingsData);\r\n      } catch (error) {\r\n        console.error('Error fetching books by ratings data:', error.message);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}