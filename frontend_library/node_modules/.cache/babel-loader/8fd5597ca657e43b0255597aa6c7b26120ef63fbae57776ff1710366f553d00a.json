{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from \"../../components/NavBar.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"SectionManagement\",\n  components: {\n    NavBar\n  },\n  mounted() {\n    this.getSections();\n    // this.toggleDropdown();\n  },\n  data() {\n    return {\n      searchBar: \"\",\n      sections: [],\n      // Replace with your actual data\n      showAddModal: false,\n      newSection: {\n        name: \"\",\n        date: \"\",\n        description: \"\"\n      },\n      isDropdownOpen: false\n    };\n  },\n  methods: {\n    flipCard(id) {\n      const sectionIndex = this.sections.findIndex(section => section.id === id);\n      this.sections[sectionIndex].flipped = !this.sections[sectionIndex].flipped;\n    },\n    toggleDropdown() {\n      this.isDropdownOpen = !this.isDropdownOpen;\n    },\n    getSections() {\n      const headers = new Headers();\n      headers.append('Authorization', `Bearer ${localStorage.getItem(\"accessToken\")}`);\n      fetch(\"http://127.0.0.1:5000/api/sections\", {\n        method: 'GET',\n        headers: headers\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        this.sections = data.map(section => ({\n          ...section,\n          color1: this.getRandomColor(),\n          color2: this.getRandomColor()\n        }));\n        console.log(this.sections);\n      }).catch(error => {\n        console.error('Error fetching sections:', error);\n      });\n    },\n    deleteSection(id) {\n      axios.delete(`http://127.0.0.1:5000/api/delete/section/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n        }\n      }).then(response => {\n        console.log(\"Section removed successfully.\", response.data);\n        // Remove the section from the local array\n        this.sections = this.sections.filter(section => section.id !== id);\n        alert(response.data.message);\n      }).catch(error => {\n        console.error(\"Error removing section:\", error);\n      });\n    },\n    openModal() {\n      this.showAddModal = true;\n      this.newSection = {\n        name: \"\",\n        date: \"\",\n        description: \"\"\n      };\n    },\n    closeModal() {\n      this.showAddModal = false;\n    },\n    addSection() {\n      axios.post(\"http://127.0.0.1:5000/api/add/new-section\", this.newSection, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n        }\n      }).then(response => {\n        console.log(\"Section added successfully.\", response.data);\n        this.newSection = {\n          title: \"\",\n          date: \"\",\n          description: \"\"\n        };\n        location.reload();\n        alert(response.data.message);\n      }).catch(error => {\n        console.error(\"Error adding section:\", error);\n      });\n      const randomColor1 = this.getRandomColor();\n      const randomColor2 = this.getRandomColor();\n      this.sections.push({\n        ...this.newSection,\n        id: Math.random(),\n        color1: randomColor1,\n        color2: randomColor2\n      }); // Simulate ID generation\n      this.closeModal();\n    },\n    getRandomColor() {\n      const colors = [\"#FF5733\", \"#FFBD33\", \"#33FF57\", \"#337DFF\", \"#AB33FF\"]; // Add more colors as needed\n      return colors[Math.floor(Math.random() * colors.length)];\n    }\n  },\n  computed: {\n    searchSections() {\n      return this.sections.filter(section => section.name.toLowerCase().includes(this.searchBar.toLowerCase()));\n    }\n  }\n};","map":{"version":3,"names":["NavBar","axios","name","components","mounted","getSections","data","searchBar","sections","showAddModal","newSection","date","description","isDropdownOpen","methods","flipCard","id","sectionIndex","findIndex","section","flipped","toggleDropdown","headers","Headers","append","localStorage","getItem","fetch","method","then","response","ok","Error","json","map","color1","getRandomColor","color2","console","log","catch","error","deleteSection","delete","Authorization","filter","alert","message","openModal","closeModal","addSection","post","title","location","reload","randomColor1","randomColor2","push","Math","random","colors","floor","length","computed","searchSections","toLowerCase","includes"],"sources":["C:\\Users\\vijay\\OneDrive\\Desktop\\National-Library-LMS\\Library_Code\\frontend_library\\src\\views\\Librarian\\SectionManagement.vue"],"sourcesContent":["<template>\n  <div>\n  <NavBar/>\n  <div class=\"container\">\n    <div class=\"dropdown\">\n  <button class=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"  @click=\"toggleDropdown\">\n    Add Section\n  </button>\n  <div class=\"dropdown-menu\"  :class=\"{ 'show': isDropdownOpen }\" aria-labelledby=\"dropdownMenuButton\">\n    <div class=\"card text-center bg-dark text-white\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Add Section</h5>\n        <hr class=\"bg-white\" />\n        <form @submit.prevent=\"addSection\">\n          <div class=\"form-group\">\n            <label for=\"name\">Section Name:</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" v-model=\"newSection.name\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"date\">Date:</label>\n            <input type=\"date\" class=\"form-control\" id=\"date\" v-model=\"newSection.date\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"description\">Description:</label>\n            <textarea class=\"form-control\" id=\"description\" v-model=\"newSection.description\"></textarea>\n          </div>\n          <button type=\"submit\" class=\"btn btn-success\" @click=\"toggleDropdown\">Save</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n    \n    <input style=\"width:100%;padding: 0.5%;border-width:0.5cap;border-radius: 10cqb; color:black;font-weight: 700;font-size:large;text-align: center;border-color: black;margin-bottom:2%;margin-top: 3%;\" type=\"text\" v-model=\"searchBar\" placeholder=\"Type a section name to search\">\n\n\n    <div class=\"flip-card\" v-for=\"section in searchSections\" :key=\"section.id\">\n      <div class=\"flip-card-inner\" :class=\"{ flipped: section.flipped }\" @click=\"flipCard(section.id)\">\n        <div class=\"flip-card-front\" :style=\"{ background: 'linear-gradient(to right, #434343 0%, black 100%)'}\">\n          <h3 style=\"color:white;justify-content: center;margin-top:25%\">{{ section.name }}</h3>\n          <p>{{ section.date }}</p>\n        </div>\n        <div class=\"flip-card-back\" :style=\"{background: 'linear-gradient(147deg, #c3cbdc 0%, #edf1f4 74%)'}\">\n\n          <router-link :to=\"'/librarian/dashboard/section/' + section.id + '/' + section.name\" class=\"view-button\">View</router-link>\n          <button class=\"delete-button\" @click=\"deleteSection(section.id)\">Delete</button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n</template>\n\n<script>\nimport NavBar from \"../../components/NavBar.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"SectionManagement\",\n  components: {\n    NavBar,\n  },\n  mounted() {\n    this.getSections();\n    // this.toggleDropdown();\n  },\n  data() {\n    return {\n      searchBar: \"\",\n      sections: [], // Replace with your actual data\n      showAddModal: false,\n      newSection: {\n        name: \"\",\n        date: \"\",\n        description: \"\",\n      },\n      isDropdownOpen: false,\n    };\n  },\n\n  methods: {\n    flipCard(id) {\n      const sectionIndex = this.sections.findIndex((section) => section.id === id);\n      this.sections[sectionIndex].flipped = !this.sections[sectionIndex].flipped;\n    },\n    toggleDropdown() {\n      this.isDropdownOpen = !this.isDropdownOpen;\n    },\n    \n    getSections() {\n      const headers = new Headers();\n      headers.append('Authorization', `Bearer ${localStorage.getItem(\"accessToken\")}`);\n\n      fetch(\"http://127.0.0.1:5000/api/sections\", {\n        method: 'GET',\n        headers: headers,\n      })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => {\n          this.sections = data.map(section => ({\n            ...section,\n            color1: this.getRandomColor(),\n            color2: this.getRandomColor()\n          }));\n          console.log(this.sections);\n        })\n        .catch(error => {\n          console.error('Error fetching sections:', error);\n        });\n    },\n \n    deleteSection(id) {\n      axios.delete(`http://127.0.0.1:5000/api/delete/section/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        },\n      })\n        .then((response) => {\n          console.log(\"Section removed successfully.\", response.data);\n          // Remove the section from the local array\n          this.sections = this.sections.filter(section => section.id !== id);\n          alert(response.data.message);\n        })\n        .catch((error) => {\n          console.error(\"Error removing section:\", error);\n        });\n    },\n    openModal() {\n      this.showAddModal = true;\n      this.newSection = { name: \"\", date: \"\", description: \"\" }; \n    },\n    closeModal() {\n      this.showAddModal = false;\n    },\n    addSection() {\n      axios.post(\"http://127.0.0.1:5000/api/add/new-section\", this.newSection, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        },\n      })\n        .then((response) => {\n          console.log(\"Section added successfully.\", response.data);\n          this.newSection = {\n            title: \"\",\n            date: \"\",\n            description: \"\",\n          };\n          location.reload();\n          alert(response.data.message);\n        })\n        .catch((error) => {\n          console.error(\"Error adding section:\", error);\n        });\n      const randomColor1 = this.getRandomColor();\n      const randomColor2 = this.getRandomColor();\n      this.sections.push({ ...this.newSection, id: Math.random(), color1: randomColor1, color2: randomColor2 }); // Simulate ID generation\n      this.closeModal();\n    },\n    getRandomColor() {\n      const colors = [\"#FF5733\", \"#FFBD33\", \"#33FF57\", \"#337DFF\", \"#AB33FF\"]; // Add more colors as needed\n      return colors[Math.floor(Math.random() * colors.length)];\n    },\n  },\n  computed: {\n    searchSections() {\n      return this.sections.filter(section =>\n        section.name.toLowerCase().includes(this.searchBar.toLowerCase())\n      );\n    }\n  },\n};\n</script>\n\n<style scoped>\n.card.text-center.mt-4.bg-dark {\n  border: 1px solid #333;\n  border-radius: 0.5rem;\n}\n\n.card-title, .card-text {\n  color: #fff;\n}\n\n.field {\n  margin-bottom: 1rem;\n}\n\n.label {\n  color: #fff;\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n}\n\n.input,\n.textarea {\n  background-color: white;\n  border: 1px solid #444;\n  border-radius: 0.25rem;\n  color: green;\n  font-weight: bold;\n  padding: 0.5rem;\n  width: 100%;\n}\n\n.textarea {\n  resize: vertical;\n  min-height: 100px;\n}\n\n.btn-success {\n  background-color: transparent;\n  border:#fff;\n  color: #fff;\n  cursor: pointer;\n}\n\n.btn-success:hover {\n  background-color: #1e7c31;\n}\n\n.form {\n  background:rgba(#13232f,.9);\n  padding: 20px;\n  max-width:600px;\n  border-radius:4px;\n  box-shadow:0 4px 10px 4px rgba(#13232f,.3);\n}\n.container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  padding: 20px;\n}\n\n.add-section {\n  margin-bottom: 20px;\n}\n\n.flip-card {\n  background-color: transparent;\n  width: 300px;\n  height: 200px;\n  border: 1px solid #f1f1f1;\n  perspective: 1000px; /* Remove this if you don't want the 3D effect */\n}\n\n/* This container is needed to position the front and back side */\n.flip-card-inner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n}\n\n.flip-card:hover .flip-card-inner {\n  transform: rotateY(180deg);\n}\n\n.flip-card-front, .flip-card-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  -webkit-backface-visibility: hidden; \n  backface-visibility: hidden;\n}\n\n.flip-card-front {\n  color: black;\n}\n\n/* Style the back side */\n.flip-card-back {\n  color: white;\n  transform: rotateY(180deg);\n}\n\n.view-button, .delete-button {\n  background-color: #4CAF50; /* Green */\n  border: none;\n  color: white;\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin-top:25%;\n  margin-right: 4px;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n.view-button:hover, .delete-button:hover {\n  background-color: #45a049; /* Darker Green */\n}\n\n.card-front,\n.card-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  border-radius: 5px;\n}\n\n/* Style for the modal */\n.modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n  width: 400px;\n  padding: 20px;\n  border-radius: 5px;\n  /* Custom styles */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n\n/* Style for buttons inside the modal */\n.modal button {\n  /* Common button styles */\n  border: none;\n  border-radius: 5px;\n  padding: 10px 20px;\n  cursor: pointer;\n}\n\n/* Style for submit button */\n.modal button[type=\"submit\"] {\n  background-color: #4CAF50; /* Green */\n  color: white;\n}\n\n/* Style for cancel button */\n.modal button[type=\"button\"] {\n  background-color: #f44336; /* Red */\n  color: white;\n}\n\n/* Hover styles for buttons */\n.modal button:hover {\n  opacity: 0.8;\n}\n\n/* Style for input fields */\n.modal input[type=\"text\"],\n.modal input[type=\"date\"],\n.modal textarea {\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n}\n\n/* Additional styles for specific form elements if needed */\n\n</style>\n"],"mappings":";AAwDA,OAAOA,MAAK,MAAO,6BAA6B;AAChD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;IAClB;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MAAE;MACdC,YAAY,EAAE,KAAK;MACnBC,UAAU,EAAE;QACVR,IAAI,EAAE,EAAE;QACRS,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE;MACf,CAAC;MACDC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,QAAQA,CAACC,EAAE,EAAE;MACX,MAAMC,YAAW,GAAI,IAAI,CAACT,QAAQ,CAACU,SAAS,CAAEC,OAAO,IAAKA,OAAO,CAACH,EAAC,KAAMA,EAAE,CAAC;MAC5E,IAAI,CAACR,QAAQ,CAACS,YAAY,CAAC,CAACG,OAAM,GAAI,CAAC,IAAI,CAACZ,QAAQ,CAACS,YAAY,CAAC,CAACG,OAAO;IAC5E,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACR,cAAa,GAAI,CAAC,IAAI,CAACA,cAAc;IAC5C,CAAC;IAEDR,WAAWA,CAAA,EAAG;MACZ,MAAMiB,OAAM,GAAI,IAAIC,OAAO,CAAC,CAAC;MAC7BD,OAAO,CAACE,MAAM,CAAC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE,EAAC,CAAC;MAEhFC,KAAK,CAAC,oCAAoC,EAAE;QAC1CC,MAAM,EAAE,KAAK;QACbN,OAAO,EAAEA;MACX,CAAC,EACEO,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,EACAJ,IAAI,CAACvB,IAAG,IAAK;QACZ,IAAI,CAACE,QAAO,GAAIF,IAAI,CAAC4B,GAAG,CAACf,OAAM,KAAM;UACnC,GAAGA,OAAO;UACVgB,MAAM,EAAE,IAAI,CAACC,cAAc,CAAC,CAAC;UAC7BC,MAAM,EAAE,IAAI,CAACD,cAAc,CAAC;QAC9B,CAAC,CAAC,CAAC;QACHE,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC/B,QAAQ,CAAC;MAC5B,CAAC,EACAgC,KAAK,CAACC,KAAI,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACN,CAAC;IAEDC,aAAaA,CAAC1B,EAAE,EAAE;MAChBf,KAAK,CAAC0C,MAAM,CAAE,4CAA2C3B,EAAG,EAAC,EAAE;QAC7DM,OAAO,EAAE;UACPsB,aAAa,EAAG,UAASnB,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;QAC/D;MACF,CAAC,EACEG,IAAI,CAAEC,QAAQ,IAAK;QAClBQ,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAET,QAAQ,CAACxB,IAAI,CAAC;QAC3D;QACA,IAAI,CAACE,QAAO,GAAI,IAAI,CAACA,QAAQ,CAACqC,MAAM,CAAC1B,OAAM,IAAKA,OAAO,CAACH,EAAC,KAAMA,EAAE,CAAC;QAClE8B,KAAK,CAAChB,QAAQ,CAACxB,IAAI,CAACyC,OAAO,CAAC;MAC9B,CAAC,EACAP,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN,CAAC;IACDO,SAASA,CAAA,EAAG;MACV,IAAI,CAACvC,YAAW,GAAI,IAAI;MACxB,IAAI,CAACC,UAAS,GAAI;QAAER,IAAI,EAAE,EAAE;QAAES,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAG,CAAC;IAC3D,CAAC;IACDqC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACxC,YAAW,GAAI,KAAK;IAC3B,CAAC;IACDyC,UAAUA,CAAA,EAAG;MACXjD,KAAK,CAACkD,IAAI,CAAC,2CAA2C,EAAE,IAAI,CAACzC,UAAU,EAAE;QACvEY,OAAO,EAAE;UACPsB,aAAa,EAAG,UAASnB,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;QAC/D;MACF,CAAC,EACEG,IAAI,CAAEC,QAAQ,IAAK;QAClBQ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAET,QAAQ,CAACxB,IAAI,CAAC;QACzD,IAAI,CAACI,UAAS,GAAI;UAChB0C,KAAK,EAAE,EAAE;UACTzC,IAAI,EAAE,EAAE;UACRC,WAAW,EAAE;QACf,CAAC;QACDyC,QAAQ,CAACC,MAAM,CAAC,CAAC;QACjBR,KAAK,CAAChB,QAAQ,CAACxB,IAAI,CAACyC,OAAO,CAAC;MAC9B,CAAC,EACAP,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;MACJ,MAAMc,YAAW,GAAI,IAAI,CAACnB,cAAc,CAAC,CAAC;MAC1C,MAAMoB,YAAW,GAAI,IAAI,CAACpB,cAAc,CAAC,CAAC;MAC1C,IAAI,CAAC5B,QAAQ,CAACiD,IAAI,CAAC;QAAE,GAAG,IAAI,CAAC/C,UAAU;QAAEM,EAAE,EAAE0C,IAAI,CAACC,MAAM,CAAC,CAAC;QAAExB,MAAM,EAAEoB,YAAY;QAAElB,MAAM,EAAEmB;MAAa,CAAC,CAAC,EAAE;MAC3G,IAAI,CAACP,UAAU,CAAC,CAAC;IACnB,CAAC;IACDb,cAAcA,CAAA,EAAG;MACf,MAAMwB,MAAK,GAAI,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,EAAE;MACxE,OAAOA,MAAM,CAACF,IAAI,CAACG,KAAK,CAACH,IAAI,CAACC,MAAM,CAAC,IAAIC,MAAM,CAACE,MAAM,CAAC,CAAC;IAC1D;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACxD,QAAQ,CAACqC,MAAM,CAAC1B,OAAM,IAChCA,OAAO,CAACjB,IAAI,CAAC+D,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAAC3D,SAAS,CAAC0D,WAAW,CAAC,CAAC,CAClE,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}