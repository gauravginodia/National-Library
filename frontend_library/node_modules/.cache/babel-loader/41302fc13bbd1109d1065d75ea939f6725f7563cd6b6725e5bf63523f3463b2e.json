{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\n\n// Import components for routes\nimport UserAuthentication from \"../views/UserAuthentication.vue\";\nimport LibrarianAuthentication from \"../views/LibrarianAuthentication.vue\";\nimport RegisterUser from \"../views/RegisterUser.vue\";\nimport UserDashboard from \"../views/User/UserDashboard.vue\";\nimport SectionManagement from \"../views/Librarian/SectionManagement.vue\";\nimport BooksbySection from \"../views/Librarian/BooksbySection.vue\";\nimport IssuedBooks from \"../views/User/IssuedBooks.vue\";\nimport RequestedReading from \"../views/Librarian/RequestedReading.vue\";\nimport AssignedBooks from \"../views/Librarian/AssignedBooks.vue\";\nimport StatusBooks from '../views/Librarian/StatusBooks.vue';\nimport UserHistory from '../views/User/UserHistory.vue';\nimport BookPage from '../views/User/BookPage.vue';\nimport StatsDashboard from '@/views/Librarian/StatsDashboard.vue';\nconst isAuthenticated = () => {\n  return !!localStorage.getItem('accessToken');\n};\nconst isUser = () => {\n  return localStorage.getItem('userType') === 'user';\n};\nconst isLibrarian = () => {\n  return localStorage.getItem('userType') === 'librarian';\n};\nconst requireAuth = (to, from, next) => {\n  if (!isAuthenticated()) {\n    next('/');\n  } else {\n    next();\n  }\n};\nconst requireUser = (to, from, next) => {\n  if (!isUser()) {\n    next('/');\n  } else {\n    next();\n  }\n};\nconst requireLibrarian = (to, from, next) => {\n  if (!isLibrarian()) {\n    next('/');\n  } else {\n    next();\n  }\n};\n\n// Routes configuration\nconst routes = [\n// Public routes\n{\n  path: '/',\n  component: UserAuthentication,\n  meta: {\n    title: \"Home\"\n  }\n}, {\n  path: '/librarian/login',\n  component: LibrarianAuthentication,\n  meta: {\n    title: \"Librarian Login\"\n  }\n}, {\n  path: '/RegisterUser',\n  component: RegisterUser,\n  meta: {\n    title: \"User Signup\"\n  }\n},\n// User routes\n{\n  path: '/user/dashboard',\n  component: UserDashboard,\n  meta: {\n    title: \"Dashboard\"\n  },\n  beforeEnter: [requireAuth, requireUser]\n}, {\n  path: '/user/dashboard/history',\n  name: 'UserHistory',\n  component: UserHistory,\n  meta: {\n    title: \"User History\"\n  },\n  beforeEnter: [requireAuth, requireUser]\n}, {\n  path: '/user/dashboard/issuedbooks',\n  name: 'IssuedBooks',\n  component: IssuedBooks,\n  meta: {\n    title: \"User Books\"\n  },\n  beforeEnter: [requireAuth, requireUser]\n}, {\n  path: '/user/dashboard/books/:id',\n  name: 'BookPage',\n  component: BookPage,\n  meta: {\n    title: \"Book Page\"\n  },\n  beforeEnter: [requireAuth, requireUser]\n}, {\n  path: '/librarian/dashboard',\n  name: 'StatsDashboard',\n  component: StatsDashboard,\n  meta: {\n    title: \"Dashboard\"\n  },\n  beforeEnter: [requireAuth, requireLibrarian]\n}, {\n  path: '/librarian/dashboard/sections',\n  name: 'SectionManagement',\n  component: SectionManagement,\n  meta: {\n    title: \"Book\"\n  }\n}, {\n  path: '/librarian/dashboard/section/:id/:name',\n  name: 'BooksbySection',\n  component: BooksbySection,\n  props: true,\n  meta: {\n    title: \"Book\"\n  }\n}, {\n  path: '/librarian/dashboard/requestedbooks',\n  name: 'RequestedReading',\n  component: RequestedReading,\n  meta: {\n    title: \"Requested Books\"\n  }\n}, {\n  path: '/librarian/dashboard/assignedbooks',\n  name: 'AssignedBooks',\n  component: AssignedBooks,\n  meta: {\n    title: \"Allocated Books\"\n  }\n}, {\n  path: '/librarian/dashboard/bookstatus',\n  name: 'StatusBooks',\n  component: StatusBooks,\n  meta: {\n    title: \"Available Books\"\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  document.title = to.meta.title || 'Library Management System';\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","UserAuthentication","LibrarianAuthentication","RegisterUser","UserDashboard","SectionManagement","BooksbySection","IssuedBooks","RequestedReading","AssignedBooks","StatusBooks","UserHistory","BookPage","StatsDashboard","isAuthenticated","localStorage","getItem","isUser","isLibrarian","requireAuth","to","from","next","requireUser","requireLibrarian","routes","path","component","meta","title","beforeEnter","name","props","router","history","process","env","BASE_URL","beforeEach","document"],"sources":["C:/Users/vijay/OneDrive/Desktop/National-Library-LMS/Library_Code/frontend_library/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\n\n// Import components for routes\nimport UserAuthentication from \"../views/UserAuthentication.vue\";\nimport LibrarianAuthentication from \"../views/LibrarianAuthentication.vue\";\nimport RegisterUser from \"../views/RegisterUser.vue\";\nimport UserDashboard from \"../views/User/UserDashboard.vue\";\nimport SectionManagement from \"../views/Librarian/SectionManagement.vue\";\nimport BooksbySection from \"../views/Librarian/BooksbySection.vue\";\nimport IssuedBooks from \"../views/User/IssuedBooks.vue\";\nimport RequestedReading from \"../views/Librarian/RequestedReading.vue\";\nimport AssignedBooks from \"../views/Librarian/AssignedBooks.vue\";\nimport StatusBooks from '../views/Librarian/StatusBooks.vue';\nimport UserHistory from '../views/User/UserHistory.vue';\nimport BookPage from '../views/User/BookPage.vue';\nimport StatsDashboard from '@/views/Librarian/StatsDashboard.vue';\nconst isAuthenticated = () => {\n  return !!localStorage.getItem('accessToken');\n};\n\nconst isUser = () => {\n  return localStorage.getItem('userType') === 'user';\n};\n\nconst isLibrarian = () => {\n  return localStorage.getItem('userType') === 'librarian';\n};\n\nconst requireAuth = (to, from, next) => {\n  if (!isAuthenticated()) {\n    next('/');\n  } else {\n    next();\n  }\n};\n\nconst requireUser = (to, from, next) => {\n  if (!isUser()) {\n    next('/');\n  } else {\n    next();\n  }\n};\n\nconst requireLibrarian = (to, from, next) => {\n  if (!isLibrarian()) {\n    next('/');\n  } else {\n    next();\n  }\n};\n\n// Routes configuration\nconst routes = [\n  // Public routes\n  { path: '/', component: UserAuthentication, meta: { title: \"Home\" } },\n  { path: '/librarian/login', component: LibrarianAuthentication, meta: { title: \"Librarian Login\" } },\n  { path: '/RegisterUser', component: RegisterUser, meta: { title: \"User Signup\" } },\n  // User routes\n  {\n    path: '/user/dashboard',\n    component: UserDashboard,\n    meta: { title: \"Dashboard\" },\n    beforeEnter: [requireAuth, requireUser]\n  },\n  { path: '/user/dashboard/history', name: 'UserHistory', component: UserHistory ,meta: { title: \"User History\" },beforeEnter: [requireAuth, requireUser]},\n  { path: '/user/dashboard/issuedbooks', name: 'IssuedBooks', component: IssuedBooks ,meta: { title: \"User Books\" },beforeEnter: [requireAuth, requireUser]},\n  { path: '/user/dashboard/books/:id', name: 'BookPage', component: BookPage ,meta: { title: \"Book Page\" },beforeEnter: [requireAuth, requireUser]},\n\n  { path: '/librarian/dashboard',name: 'StatsDashboard',component: StatsDashboard,meta: { title: \"Dashboard\" },beforeEnter: [requireAuth, requireLibrarian]},\n  { path: '/librarian/dashboard/sections', name: 'SectionManagement', component: SectionManagement, meta: { title: \"Book\" } },\n  { path: '/librarian/dashboard/section/:id/:name', name: 'BooksbySection', component: BooksbySection, props: true, meta: { title: \"Book\" } },\n  { path: '/librarian/dashboard/requestedbooks', name: 'RequestedReading', component: RequestedReading, meta: { title: \"Requested Books\" } },\n  { path: '/librarian/dashboard/assignedbooks', name: 'AssignedBooks', component: AssignedBooks, meta: { title: \"Allocated Books\" } },\n  { path: '/librarian/dashboard/bookstatus', name: 'StatusBooks', component: StatusBooks, meta: { title: \"Available Books\" } },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nrouter.beforeEach((to, from, next) => {\n  document.title = to.meta.title || 'Library Management System';\n  next();\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}